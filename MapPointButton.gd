extends Button

# –°–∏–≥–Ω–∞–ª –¥–ª—è –∫–ª–∏–∫–∞ –ø–æ —Ç–æ—á–∫–µ
signal point_clicked(point_ref)

# –°–≤–æ–π—Å—Ç–≤–∞ —Ç–æ—á–∫–∏
var point_id: int = -1
var event_type: int = 0
var is_key_point: bool = false
var is_visited: bool = false
var is_current: bool = false

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞
const EVENT_ICONS = {
	0: "üè†",  # SAFE_ZONE
	1: "‚öîÔ∏è",  # BATTLE
	2: "üõí",  # MERCHANT
	3: "‚ùì",  # RANDOM
	4: "üåø"   # EMPTY
}

const COLORS = {
	0: Color(1.0, 0.9, 0.2, 0.9),    # SAFE_ZONE (–ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π –∂–µ–ª—Ç—ã–π)
	1: Color(0.9, 0.2, 0.2, 0.9),    # BATTLE (–ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π –∫—Ä–∞—Å–Ω—ã–π)
	2: Color(0.2, 0.5, 0.9, 0.9),    # MERCHANT (–ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π —Å–∏–Ω–∏–π)
	3: Color(0.7, 0.3, 0.9, 0.9),    # RANDOM (–ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π)
	4: Color(0.3, 0.8, 0.3, 0.9)     # EMPTY (–ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π –∑–µ–ª–µ–Ω—ã–π)
}

const HOVER_LIGHTEN = 0.2  # –ù–∞—Å–∫–æ–ª—å–∫–æ –æ—Å–≤–µ—Ç–ª—è—Ç—å –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
const PRESS_DARKEN = 0.3   # –ù–∞—Å–∫–æ–ª—å–∫–æ –∑–∞—Ç–µ–º–Ω—è—Ç—å –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏

# –°—Å—ã–ª–∫–∏ –Ω–∞ –¥–æ—á–µ—Ä–Ω–∏–µ —É–∑–ª—ã
@onready var icon_label: Label = $Icon

func _ready():
	print("=== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø BUTTON –¢–û–ß–ö–ò ", point_id, " ===")
	
	# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Button
	custom_minimum_size = Vector2(64, 64)
	size = Vector2(64, 64)
	flat = false  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–º–∫—É –∫–Ω–æ–ø–∫–∏
	focus_mode = Control.FOCUS_NONE  # –û—Ç–∫–ª—é—á–∞–µ–º —Ñ–æ–∫—É—Å
	
	# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª –∫–ª–∏–∫–∞
	pressed.connect(_on_button_pressed)
	mouse_entered.connect(_on_mouse_entered)
	mouse_exited.connect(_on_mouse_exited)
	
	# –û–±–Ω–æ–≤–ª—è–µ–º –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥
	update_appearance()
	
	print("Button —Ç–æ—á–∫–∞ ", point_id, " (–∫–ª—é—á–µ–≤–∞—è: ", is_key_point, ") –≥–æ—Ç–æ–≤–∞ –∫ –∫–ª–∏–∫–∞–º –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ ", position)
	print("================================")

func _on_button_pressed():
	"""–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ"""
	print("=== BUTTON –ö–õ–ò–ö –¢–û–ß–ö–ê ", point_id, " ===")
	print("–ö–ª—é—á–µ–≤–∞—è: ", is_key_point, " –ü–æ—Å–µ—â–µ–Ω–∞: ", is_visited, " Disabled: ", disabled)
	
	# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∫–ª—é—á–µ–≤–∞—è —Ç–æ—á–∫–∞ –∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω–∞
	if is_key_point and not is_visited and not disabled:
		print("‚úÖ –≠–º–∏—Ç–∏–º —Å–∏–≥–Ω–∞–ª –¥–ª—è —Ç–æ—á–∫–∏ ", point_id)
		show_click_feedback()
		emit_signal("point_clicked", self)
	else:
		print("‚ùå –¢–æ—á–∫–∞ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∫–ª–∏–∫–∞: –∫–ª—é—á–µ–≤–∞—è=", is_key_point, " –ø–æ—Å–µ—â–µ–Ω–∞=", is_visited, " –æ—Ç–∫–ª—é—á–µ–Ω–∞=", disabled)
	print("================================")

func _on_mouse_entered():
	"""–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–≤–µ–¥–µ–Ω–∏–µ –º—ã—à–∏"""
	print("–ú—ã—à—å –≤–æ—à–ª–∞ –≤ Button —Ç–æ—á–∫—É ", point_id, " (–∫–ª—é—á–µ–≤–∞—è: ", is_key_point, ")")
	if is_key_point and not is_visited:
		# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∏–ª—å
		var current_style = get_theme_stylebox("normal") as StyleBoxFlat
		if current_style:
			# –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª—å –¥–ª—è –Ω–∞–≤–µ–¥–µ–Ω–∏—è
			var hover_style = current_style.duplicate()
			hover_style.bg_color = current_style.bg_color.lightened(HOVER_LIGHTEN)
			hover_style.border_color = current_style.border_color.lightened(HOVER_LIGHTEN)
			add_theme_stylebox_override("hover", hover_style)
			print("–ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ –¥–ª—è —Ç–æ—á–∫–∏ ", point_id)

func _on_mouse_exited():
	"""–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É—Ö–æ–¥ –º—ã—à–∏"""
	print("–ú—ã—à—å –≤—ã—à–ª–∞ –∏–∑ Button —Ç–æ—á–∫–∏ ", point_id)
	update_appearance()

func show_click_feedback():
	"""–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –∫–ª–∏–∫–∞"""
	# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∏–ª—å
	var current_style = get_theme_stylebox("normal") as StyleBoxFlat
	if current_style:
		# –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª—å –¥–ª—è –∫–ª–∏–∫–∞
		var click_style = current_style.duplicate()
		click_style.bg_color = Color.WHITE
		click_style.border_color = Color.WHITE
		add_theme_stylebox_override("pressed", click_style)
		
		# –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ü–≤–µ—Ç —á–µ—Ä–µ–∑ 0.1 —Å–µ–∫—É–Ω–¥—ã
		get_tree().create_timer(0.1).timeout.connect(func():
			update_appearance()
		)

func update_appearance():
	"""–û–±–Ω–æ–≤–ª—è–µ—Ç –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Ç–æ—á–∫–∏"""
	if not icon_label:
		return
	
	# –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π —Å—Ç–∏–ª—å
	var style = StyleBoxFlat.new()
	style.corner_radius_top_left = 8
	style.corner_radius_top_right = 8
	style.corner_radius_bottom_left = 8
	style.corner_radius_bottom_right = 8
	style.border_width_left = 2
	style.border_width_top = 2
	style.border_width_right = 2
	style.border_width_bottom = 2
	
	# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
	var base_color = COLORS.get(event_type, Color.WHITE)
	if is_visited:
		style.bg_color = Color.GRAY
		style.border_color = Color.DARK_GRAY
	elif is_current:
		style.bg_color = Color.ORANGE
		style.border_color = Color.DARK_ORANGE
	else:
		style.bg_color = base_color
		style.border_color = base_color.darkened(0.2)
	
	# –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª—å –∫–æ –≤—Å–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è–º
	add_theme_stylebox_override("normal", style)
	
	# –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª—å –¥–ª—è –Ω–∞–≤–µ–¥–µ–Ω–∏—è
	var hover_style = style.duplicate()
	hover_style.bg_color = style.bg_color.lightened(HOVER_LIGHTEN)
	hover_style.border_color = style.border_color.lightened(HOVER_LIGHTEN)
	add_theme_stylebox_override("hover", hover_style)
	
	# –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª—å –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è
	var pressed_style = style.duplicate()
	pressed_style.bg_color = style.bg_color.darkened(PRESS_DARKEN)
	pressed_style.border_color = style.border_color.darkened(PRESS_DARKEN)
	add_theme_stylebox_override("pressed", pressed_style)
	
	# –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª—å –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
	var disabled_style = style.duplicate()
	disabled_style.bg_color = style.bg_color.darkened(0.5)
	disabled_style.border_color = style.border_color.darkened(0.5)
	add_theme_stylebox_override("disabled", disabled_style)
	
	# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∫–æ–Ω–∫—É
	icon_label.text = EVENT_ICONS.get(event_type, "?")
	
	# –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –µ—Å–ª–∏ –Ω–µ –∫–ª—é—á–µ–≤–∞—è –∏–ª–∏ —É–∂–µ –ø–æ—Å–µ—â–µ–Ω–∞
	disabled = not is_key_point or is_visited
	
	print("–û–±–Ω–æ–≤–ª–µ–Ω –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –∫–Ω–æ–ø–∫–∏ ", point_id, ": —Ü–≤–µ—Ç=", base_color, " –ø–æ—Å–µ—â–µ–Ω–∞=", is_visited, " –∫–ª—é—á–µ–≤–∞—è=", is_key_point)

func set_visited(visited: bool):
	"""–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–µ—â–µ–Ω–∏—è"""
	is_visited = visited
	update_appearance()

func set_current(current: bool):
	"""–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Ç–æ—á–∫–∏"""
	is_current = current
	update_appearance()

func disable_click():
	"""–û—Ç–∫–ª—é—á–∞–µ—Ç –∫–ª–∏–∫–∏ –ø–æ —Ç–æ—á–∫–µ"""
	disabled = true

func enable_click():
	"""–í–∫–ª—é—á–∞–µ—Ç –∫–ª–∏–∫–∏ –ø–æ —Ç–æ—á–∫–µ"""
	disabled = false

func get_event_type_name() -> String:
	"""–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è"""
	var names = ["–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞", "–ë–æ–π", "–¢–æ—Ä–≥–æ–≤–µ—Ü", "–°–ª—É—á–∞–π–Ω–æ–µ", "–ü—É—Å—Ç–∞—è –∫–æ–º–Ω–∞—Ç–∞"]
	return names[event_type] if event_type < names.size() else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ" 
